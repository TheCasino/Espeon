// <auto-generated />

using Espeon.Core.Databases.CommandStore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using System.Collections.Generic;

namespace Espeon.Core.Migrations.CommandStoreMigrations {
	[DbContext(typeof(CommandStore))]
	internal partial class CommandStoreModelSnapshot : ModelSnapshot {
		protected override void BuildModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
			modelBuilder.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
				.HasAnnotation("ProductVersion", "3.0.0-preview.18572.1")
				.HasAnnotation("Relational:MaxIdentifierLength", 63);

			modelBuilder.Entity("Espeon.Core.Databases.CommandInfo", b => {
				b.Property<string>("Name");

				b.Property<string>("ModuleName");

				b.Property<List<string>>("Aliases");

				b.HasKey("Name", "ModuleName");

				b.HasIndex("ModuleName");

				b.ToTable("CommandInfo");
			});

			modelBuilder.Entity("Espeon.Core.Databases.ModuleInfo", b => {
				b.Property<string>("Name").ValueGeneratedOnAdd();

				b.Property<List<string>>("Aliases");

				b.HasKey("Name");

				b.ToTable("Modules");
			});

			modelBuilder.Entity("Espeon.Core.Databases.CommandInfo",
				b => {
					b.HasOne("Espeon.Core.Databases.ModuleInfo", "Module").WithMany("Commands")
						.HasForeignKey("ModuleName").OnDelete(DeleteBehavior.Cascade);
				});
#pragma warning restore 612, 618
		}
	}
}